plugins {
    id 'war'
}
description = 'Smoothness demo app'
group 'org.jlab'
version rootProject.version
ext.releaseDate = rootProject.ext.releaseDate
ext.resourceVersion = rootProject.ext.resourceVersion

project.sourceCompatibility = JavaVersion.VERSION_11
project.targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

configurations {
    dockerBuild.extendsFrom testRuntimeOnly
}

dependencies {
    if (project.hasProperty("provided")) {
        providedCompile project(':smoothness-weblib'),
                'org.tuckey:urlrewritefilter:4.0.4',
                'org.hibernate:hibernate-core:5.4.2.Final',
                'org.jlab:jlog:5.0.0'
    } else {
        implementation project(':smoothness-weblib'),
                'org.tuckey:urlrewritefilter:4.0.4',
                'org.hibernate:hibernate-core:5.4.2.Final',
                'org.jlab:jlog:5.0.0'
    }

    providedCompile('antlr:antlr') {
        version {
            strictly "2.7.7"
        }
    }

    // No matter what the Java EE API is provided by the application server
    providedCompile 'javax:javaee-api:8.0'

    dockerBuild 'com.oracle.database.jdbc:ojdbc11:21.3.0.0'
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}

war {
    archiveFileName = 'smoothness-demo.war'
    filesMatching('WEB-INF/web.xml') {
        filter {
            String line -> line.replaceAll("@VERSION@", project.version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
        filter {
            String line -> line.replaceAll("@RESOURCE_VERSION@", resourceVersion)
        }
    }
}

task initOracleDriver(type: Copy) {
    from configurations.dockerBuild
    into "$rootDir/run/wildfly/modules/com/oracle/database/jdbc/main"
    include 'ojdbc11-*.jar'
}

task initOracleRunSetup {
    outputs.dir "$rootDir/run/oracle/oradata"
    outputs.upToDateWhen {
        file("$rootDir/run/oracle/oradata").exists()
    }
    doLast {
        mkdir "$rootDir/run/oracle/oradata"
    }
}

task initWildflyRunSetup(type: Copy) {
    from "$rootDir/docker/wildfly"
    into "$rootDir/run/wildfly"
    exclude("docker-entrypoint.sh")
    exclude("TestOracleConnection.java")
}

task dockerRunSetup {
    dependsOn(initOracleRunSetup)
    dependsOn(initWildflyRunSetup)
    dependsOn(initOracleDriver)
}

tasks.war.dependsOn(dockerRunSetup)

tasks.war.doLast {
    copy {
        from war
        into "$rootDir/run/wildfly/standalone/deployments"
    }
}